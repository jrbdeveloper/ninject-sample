//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace App.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MVCExampleEntities : DbContext
    {
        public MVCExampleEntities()
            : base("name=MVCExampleEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<Biometric> Biometrics { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<Email> Emails { get; set; }
        public virtual DbSet<Person> People { get; set; }
        public virtual DbSet<Phone> Phones { get; set; }
    
        public virtual int Address_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Address_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Address_GetAllByPersonId_Result> Address_GetAllByPersonId(Nullable<int> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Address_GetAllByPersonId_Result>("Address_GetAllByPersonId", personIdParameter);
        }
    
        public virtual ObjectResult<Address_GetById_Result> Address_GetById(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Address_GetById_Result>("Address_GetById", iDParameter);
        }
    
        public virtual int Address_Save(Nullable<int> iD, Nullable<int> personId, string addressStreet1, string addressStreet2, string addressCity, string addressState, string addressZip)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            var addressStreet1Parameter = addressStreet1 != null ?
                new ObjectParameter("AddressStreet1", addressStreet1) :
                new ObjectParameter("AddressStreet1", typeof(string));
    
            var addressStreet2Parameter = addressStreet2 != null ?
                new ObjectParameter("AddressStreet2", addressStreet2) :
                new ObjectParameter("AddressStreet2", typeof(string));
    
            var addressCityParameter = addressCity != null ?
                new ObjectParameter("AddressCity", addressCity) :
                new ObjectParameter("AddressCity", typeof(string));
    
            var addressStateParameter = addressState != null ?
                new ObjectParameter("AddressState", addressState) :
                new ObjectParameter("AddressState", typeof(string));
    
            var addressZipParameter = addressZip != null ?
                new ObjectParameter("AddressZip", addressZip) :
                new ObjectParameter("AddressZip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Address_Save", iDParameter, personIdParameter, addressStreet1Parameter, addressStreet2Parameter, addressCityParameter, addressStateParameter, addressZipParameter);
        }
    
        public virtual ObjectResult<Biometrics_GetById_Result> Biometrics_GetById(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Biometrics_GetById_Result>("Biometrics_GetById", iDParameter);
        }
    
        public virtual int Company_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Company_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Company_GetAll_Result> Company_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Company_GetAll_Result>("Company_GetAll");
        }
    
        public virtual ObjectResult<Company_GetById_Result> Company_GetById(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Company_GetById_Result>("Company_GetById", iDParameter);
        }
    
        public virtual int Company_Save(Nullable<int> iD, string name, string phoneId, string emailId, Nullable<int> addressID, Nullable<int> phoneAreaCode, Nullable<int> phonePrefix, Nullable<int> phoneSufix, string emailAddress, string addressStreet1, string addressStreet2, string addressCity, string addressState, string addressZip, Nullable<int> ownerID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var phoneIdParameter = phoneId != null ?
                new ObjectParameter("PhoneId", phoneId) :
                new ObjectParameter("PhoneId", typeof(string));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var addressIDParameter = addressID.HasValue ?
                new ObjectParameter("AddressID", addressID) :
                new ObjectParameter("AddressID", typeof(int));
    
            var phoneAreaCodeParameter = phoneAreaCode.HasValue ?
                new ObjectParameter("PhoneAreaCode", phoneAreaCode) :
                new ObjectParameter("PhoneAreaCode", typeof(int));
    
            var phonePrefixParameter = phonePrefix.HasValue ?
                new ObjectParameter("PhonePrefix", phonePrefix) :
                new ObjectParameter("PhonePrefix", typeof(int));
    
            var phoneSufixParameter = phoneSufix.HasValue ?
                new ObjectParameter("PhoneSufix", phoneSufix) :
                new ObjectParameter("PhoneSufix", typeof(int));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var addressStreet1Parameter = addressStreet1 != null ?
                new ObjectParameter("AddressStreet1", addressStreet1) :
                new ObjectParameter("AddressStreet1", typeof(string));
    
            var addressStreet2Parameter = addressStreet2 != null ?
                new ObjectParameter("AddressStreet2", addressStreet2) :
                new ObjectParameter("AddressStreet2", typeof(string));
    
            var addressCityParameter = addressCity != null ?
                new ObjectParameter("AddressCity", addressCity) :
                new ObjectParameter("AddressCity", typeof(string));
    
            var addressStateParameter = addressState != null ?
                new ObjectParameter("AddressState", addressState) :
                new ObjectParameter("AddressState", typeof(string));
    
            var addressZipParameter = addressZip != null ?
                new ObjectParameter("AddressZip", addressZip) :
                new ObjectParameter("AddressZip", typeof(string));
    
            var ownerIDParameter = ownerID.HasValue ?
                new ObjectParameter("OwnerID", ownerID) :
                new ObjectParameter("OwnerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Company_Save", iDParameter, nameParameter, phoneIdParameter, emailIdParameter, addressIDParameter, phoneAreaCodeParameter, phonePrefixParameter, phoneSufixParameter, emailAddressParameter, addressStreet1Parameter, addressStreet2Parameter, addressCityParameter, addressStateParameter, addressZipParameter, ownerIDParameter);
        }
    
        public virtual int Email_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Email_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Email_GetAllByPersonId_Result> Email_GetAllByPersonId(Nullable<int> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Email_GetAllByPersonId_Result>("Email_GetAllByPersonId", personIdParameter);
        }
    
        public virtual ObjectResult<Email_GetById_Result> Email_GetById(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Email_GetById_Result>("Email_GetById", iDParameter);
        }
    
        public virtual int Email_Save(Nullable<int> iD, Nullable<int> personId, string address)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Email_Save", iDParameter, personIdParameter, addressParameter);
        }
    
        public virtual ObjectResult<People_GetAll_Result> People_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<People_GetAll_Result>("People_GetAll");
        }
    
        public virtual int Person_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Person_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Person_GetById_Result> Person_GetById(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Person_GetById_Result>("Person_GetById", iDParameter);
        }
    
        public virtual int Person_Save(Nullable<int> iD, Nullable<int> biometricId, string firstName, string lastName, string height, string weight, string dOB, string hairColor, string eyeColor)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var biometricIdParameter = biometricId.HasValue ?
                new ObjectParameter("BiometricId", biometricId) :
                new ObjectParameter("BiometricId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var heightParameter = height != null ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(string));
    
            var weightParameter = weight != null ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(string));
    
            var dOBParameter = dOB != null ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(string));
    
            var hairColorParameter = hairColor != null ?
                new ObjectParameter("HairColor", hairColor) :
                new ObjectParameter("HairColor", typeof(string));
    
            var eyeColorParameter = eyeColor != null ?
                new ObjectParameter("EyeColor", eyeColor) :
                new ObjectParameter("EyeColor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Person_Save", iDParameter, biometricIdParameter, firstNameParameter, lastNameParameter, heightParameter, weightParameter, dOBParameter, hairColorParameter, eyeColorParameter);
        }
    
        public virtual int Phone_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Phone_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Phone_GetAllByPersonId_Result> Phone_GetAllByPersonId(Nullable<int> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Phone_GetAllByPersonId_Result>("Phone_GetAllByPersonId", personIdParameter);
        }
    
        public virtual ObjectResult<Phone_GetById_Result> Phone_GetById(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Phone_GetById_Result>("Phone_GetById", iDParameter);
        }
    
        public virtual int Phone_Save(Nullable<int> iD, Nullable<int> personId, Nullable<int> areacode, Nullable<int> prefix, Nullable<int> sufix)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("PersonId", personId) :
                new ObjectParameter("PersonId", typeof(int));
    
            var areacodeParameter = areacode.HasValue ?
                new ObjectParameter("Areacode", areacode) :
                new ObjectParameter("Areacode", typeof(int));
    
            var prefixParameter = prefix.HasValue ?
                new ObjectParameter("Prefix", prefix) :
                new ObjectParameter("Prefix", typeof(int));
    
            var sufixParameter = sufix.HasValue ?
                new ObjectParameter("Sufix", sufix) :
                new ObjectParameter("Sufix", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Phone_Save", iDParameter, personIdParameter, areacodeParameter, prefixParameter, sufixParameter);
        }
    }
}
